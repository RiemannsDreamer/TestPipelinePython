name: Advanced CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  linting:
    name: Lint & Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install flake8 black isort mypy bandit

      - name: Run Flake8
        run: |
          source venv/bin/activate  
          flake8 .

      - name: Run Black Check
        run: |
          source venv/bin/activate
          black --check .

      - name: Run Isort Check
        run: |
          source venv/bin/activate
          isort . --check-only

      - name: Run Mypy Type Checking
        run: |
          source venv/bin/activate
          mypy .

      - name: Run Bandit Security Check
        run: |
          source venv/bin/activate
          bandit -r .

  security:
    name: Security & Dependency Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Safety
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install safety

      - name: Run Security Audit
        run: |
          source venv/bin/activate  
          safety check

  tests:
    name: Run Unit & Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          pip install pytest coverage pytest-mock pytest-cov hypothesis

      - name: Run Tests with Coverage
        run: |
          source venv/bin/activate
          pytest --cov=. --cov-report=xml --cov-report=html

      - name: Upload Coverage Report
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests

  code_quality:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install SonarScanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip
          export PATH=$PATH:$(pwd)/sonar-scanner-4.6.2.2472-linux/bin

      - name: Run SonarCloud Analysis
        run: |
          source venv/bin/activate
          sonar-scanner -Dsonar.organization=my-org -Dsonar.projectKey=my-project -Dsonar.python.version=3.10
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  container_scan:
#    name: Container Security Scan
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      - name: Build Docker Image
#        run: |
#          docker build -t my-app:latest .
#
#      - name: Scan Docker Image with Trivy
#        uses: aquasecurity/trivy-action@master
#        with:
#          image-ref: 'my-app:latest'
#          format: 'table'
#          exit-code: 1
#          severity: 'CRITICAL,HIGH'

  deploy:
    name: Deploy to Production
#    needs: [linting, security, tests, code_quality, container_scan]
    needs: [linting, security, tests, code_quality]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Deploy to Server
        run: ./deploy.sh
